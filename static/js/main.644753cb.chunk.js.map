{"version":3,"sources":["fbase.js","components/Nweet.js","components/Loading.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","ok","window","confirm","console","log","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onNweetSubmit","event","preventDefault","update","className","style","position","onSubmit","width","type","placeholder","value","required","onChange","target","right","onClick","display","flexDirection","alignItems","src","icon","faTrash","faPencilAlt","Loading","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","loading","setLoading","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createdId","collection","add","maxLength","faPlus","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","height","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","background","justifyContent","fontSize","color","textShadow","faAndroid","size","marginBottom","faGoogle","faGithub","Navigation","paddingTop","paddingBottom","to","marginRight","faHome","marginLeft","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","ReactDOM","render","StrictMode","rel","href","document","getElementById"],"mappings":"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","file":"static/js/main.644753cb.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebaseInstance = firebase\n\nexport const authService = firebase.auth()\nexport const dbService = firebase.firestore()\nexport const storageService = firebase.storage()","import React, { useState } from 'react'\nimport { dbService, storageService } from 'fbase'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nconst Nweet = ({nweetObj, isOwner}) => {\n\n  const [editing, setEditing] = useState(false)\n  const [newNweet, setNewNweet] = useState(nweetObj.text)\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?')\n    console.log(ok)\n    if (ok) {\n      await dbService.doc(`nweets/${ nweetObj.id }`).delete()\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete()\n    }\n  }\n\n  const toggleEditing = () => setEditing((prev) => !prev)\n\n  const onNweetSubmit = async (event) => {\n    event.preventDefault()\n    await dbService.doc(`nweets/${ nweetObj.id }`).update({text: newNweet})\n    setEditing(false)\n  }\n\n  const onNweetChange = (event) => {\n    const {target: {value}} = event\n    setNewNweet(value)\n  }\n\n  return (\n    <div className='nweet'>\n      { editing ? (\n        <div>\n          <h1 className={ 'text-center text-lg font-bold' }>Modify</h1>\n          <form style={ {position: 'relative'} } className={ 'mt-5 mb-8' } onSubmit={ onNweetSubmit }>\n            <input\n              style={ {width: '100%'} }\n              className={ 'formInput mb-5 mr-5' }\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={ newNweet }\n              required\n              onChange={ onNweetChange }\n            />\n            <div style={ {position: 'absolute', right: '0'} }>\n              <button\n                className={ 'cancelBtn mr-3' }\n                onClick={ toggleEditing }>Cancel\n              </button>\n              <input\n                className={ 'myBlueBtn' }\n                type=\"submit\"\n                value=\"Update Nweet\" />\n            </div>\n          </form>\n        </div>\n      ) : (\n          <div style={ {display: 'flex', flexDirection: 'row', alignItems: 'center'} }>\n            { nweetObj.attachmentUrl && (\n              <img className={ 'rounded-full mr-5 w-12' } src={ nweetObj.attachmentUrl } />\n            ) }\n            <h4 className='pr-10'>{ nweetObj.text }</h4>\n            { isOwner && (\n              <div className='nweet__actions'>\n                <span onClick={ onDeleteClick }>\n                  <FontAwesomeIcon icon={ faTrash } />\n                </span>\n                <span onClick={ toggleEditing }>\n                  <FontAwesomeIcon icon={ faPencilAlt } />\n                </span>\n              </div>\n            ) }\n          </div>\n        ) }\n    </div>\n  )\n}\n\nexport default Nweet\n","import React from 'react'\n\n//https://loading.io/css/\nfunction Loading() {\n  return <div className=\"lds-roller\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n}\n\nexport default Loading\n\n","import { dbService, storageService } from 'fbase'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport Loading from 'components/Loading'\n\nconst NweetFactory = ({userObj}) => {\n  const [nweet, setNweet] = useState('')\n  const [attachment, setAttachment] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const onSubmit = async (event) => {\n    if (nweet === '') {\n      return\n    }\n\n    event.preventDefault()\n\n    setLoading(true)\n\n    let attachmentUrl = ''\n\n    if (attachment !== '') {\n      const attachmentRef = storageService.ref().child(`${ userObj.uid }/${ uuidv4() }`)\n      const response = await attachmentRef.putString(attachment, 'data_url')\n      attachmentUrl = await response.ref.getDownloadURL()\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      createdId: userObj.uid,\n      attachmentUrl\n    }\n\n    await dbService.collection('nweets').add(nweetObj)\n\n    setNweet('')\n    setAttachment('')\n\n    setLoading(false)\n  }\n\n  const onChange = (event) => {\n    const {target: {value}} = event\n    setNweet(value)\n  }\n\n  const onFileChange = (event) => {\n    const {target: {files}} = event\n    const theFile = files[0]\n    const reader = new FileReader()\n    reader.onloadend = (finishedEvent) => {\n      const {currentTarget: {result}} = finishedEvent\n      setAttachment(result)\n    }\n    reader.readAsDataURL(theFile)\n  }\n\n  const onClearAttachment = () => setAttachment('')\n\n  return (\n    <form onSubmit={ onSubmit } className='factoryForm'>\n      <div className='factoryInput__container'>\n        <input className='factoryInput__input' value={ nweet } onChange={ onChange } type=\"text\" placeholder=\"What's on your mind\" maxLength={ 120 } />\n        <input className='factoryInput__submit' type=\"submit\" value=\"&rarr;\" />\n        { loading && <Loading /> }\n        <label className='factoryInput__label'>\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={ faPlus } />\n          <input style={ {display: 'none'} } onChange={ onFileChange } type=\"file\" accept=\"image/*\" />\n        </label>\n      </div>\n      { attachment && (\n        <div className='factoryForm__attachment'>\n          <img src={ attachment } width=\"50px\" height=\"50px\" />\n          <div className='factoryForm__clear' onClick={ onClearAttachment }>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={ faTimes } />\n          </div>\n        </div>\n      ) }\n    </form>\n  )\n}\n\nexport default NweetFactory","import React, { useEffect, useState } from 'react'\nimport { dbService } from 'fbase'\nimport Nweet from 'components/Nweet'\nimport NweetFactory from 'components/NweetFactory'\n\nconst Home = ({userObj}) => {\n  const [nweets, setNweets] = useState([])\n\n  useEffect(() => {\n    dbService.collection('nweets').orderBy('createdAt', 'desc').onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data()\n      }))\n      setNweets(nweetArray)\n    })\n  }, [])\n\n  return (\n    <div style={ {marginTop: '30px', display: 'flex', flexDirection: 'column', alignItems: 'center'} }>\n      <NweetFactory userObj={ userObj } />\n      <div style={ {display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100vw', marginTop: '30px'} }>\n        { nweets.map((nweet) => (\n          <Nweet\n            key={ nweet.id }\n            nweetObj={ nweet }\n            isOwner={ userObj.uid === nweet.createdId }\n          />\n        )) }\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import { authService } from 'fbase'\nimport { useState } from 'react'\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [newAccount, setNewAccount] = useState(true)\n  const [error, setError] = useState('')\n\n  const onChange = (event) => {\n    const {target: {name, value}} = event\n    if (name === 'email') {\n      setEmail(value)\n    } else if (name === 'password') {\n      setPassword(value)\n    }\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      let data\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password)\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password)\n      }\n      console.log(data)\n    } catch (error) {\n      setError(error.message)\n    }\n  }\n\n  const toggleAccount = () => setNewAccount((prev) => !prev)\n\n  return (\n    <>\n      <form onSubmit={ onSubmit } className=\"container\">\n        <input className=\"authInput\" name=\"email\" type=\"text\" placeholder=\"Email\" value={ email } onChange={ onChange } required />\n        <input className=\"authInput\" name=\"password\" type=\"password\" placeholder=\"password\" value={ password } onChange={ onChange } required />\n        <input className=\"authInput authSubmit\" type=\"submit\" value={ newAccount ? 'Create Account' : 'Log In' } />\n      </form>\n      { error && <span className=\"authError\">{ error }</span> }\n      <span onClick={ toggleAccount } className=\"authSwitch\">\n                { newAccount ? 'Sign In' : 'Create Account' }\n      </span>\n    </>\n  )\n}\n\nexport default AuthForm","import React from 'react'\nimport { firebaseInstance } from 'fbase'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport AuthForm from 'components/AuthForm'\nimport { faAndroid, faGithub, faGoogle } from '@fortawesome/free-brands-svg-icons'\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {target: {name}} = event\n    let provider\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider()\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider()\n    }\n    const data = await firebaseInstance.auth().signInWithPopup(provider)\n    console.log(data)\n  }\n\n  return (\n    <div style={ {background: 'linear-gradient(#190e1f,#190e1f,#190e1f,#3C1951,#3C1951,#EF9A93,#ffddda)', height: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column'} }>\n      <p style={ {fontSize: '25px', color: 'var(--android-color)', textShadow: '0 0 22px'} }>Happy Handal Member ♥️</p>\n      <FontAwesomeIcon icon={ faAndroid } color={ 'var(--android-color)' } size=\"3x\" style={ {marginBottom: '30px'} } />\n      <AuthForm />\n      <div style={ {width: '320px', display: 'flex', justifyContent: 'space-between'} }>\n        <button className=\"bg-white rounded-full text-xs py-2 px-2\" onClick={ onSocialClick } name=\"google\">Continue with Google <FontAwesomeIcon icon={ faGoogle } /></button>\n        <button className=\"bg-white rounded-full text-xs py-2 px-2\" onClick={ onSocialClick } name=\"github\">Continue with Github <FontAwesomeIcon icon={ faGithub } /></button>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHome, faUser } from '@fortawesome/free-solid-svg-icons'\n\nconst Navigation = ({userObj}) => {\n  return (\n    <nav>\n      <ul style={ {background: 'white', display: 'flex', justifyContent: 'center', paddingTop: '30px', paddingBottom: '10px', marginBottom: '0px'} }>\n        <li>\n          <Link to=\"/\"\n                style={ {marginRight: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontSize: '12px'} }\n          >\n            <FontAwesomeIcon icon={ faHome } color={ 'var(--navigation-color)' } size='2x' />\n            <span style={ {marginTop: '10px', color: 'var(--navigation-color)'} }>Home</span>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/profile\"\n                style={ {marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontSize: '12px'} }\n          >\n            <FontAwesomeIcon icon={ faUser } color={ 'var(--navigation-color)' } size='2x' />\n            <span style={ {marginTop: '10px', color: 'var(--navigation-color)'} }>\n                { userObj.displayName ? `${ userObj.displayName }의 Profile` : 'Profile' }\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navigation","import React, { useEffect, useState } from 'react'\nimport { authService, dbService } from 'fbase'\nimport { useHistory } from 'react-router-dom'\n\nconst Profile = ({refreshUser, userObj}) => {\n  const history = useHistory()\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n\n  const onLogOutClick = () => {\n    authService.signOut()\n    history.push('/')\n  }\n\n  const onChange = (event) => {\n    const {target: {value}} = event\n    setNewDisplayName(value)\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({displayName: newDisplayName})\n      refreshUser()\n    }\n  }\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection('nweets')\n      .where('creatorId', '==', userObj.uid)\n      .orderBy('createdAt')\n      .get()\n    console.log(nweets.docs.map((doc) => doc.data()))\n  }\n\n  useEffect(() => {\n    //getMyNweets()\n  }, [])\n\n  return (\n    <div className='profileContainer'>\n      <form onSubmit={ onSubmit } className='profileForm'>\n        <input className='formInput' onChange={ onChange } type=\"text\" placeholder=\"Display name\" value={ newDisplayName } autoFocus />\n        <input className='myBlueBtn' type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <span className='mt-10 cancelBtn' onClick={ onLogOutClick }>Log Out</span>\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from 'routes/Home'\nimport Auth from 'routes/Auth'\nimport Navigation from 'components/Navigation'\nimport Profile from 'routes/Profile'\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n  return (\n    <Router>\n      { isLoggedIn && <Navigation userObj={ userObj } /> }\n      <Switch>\n        { isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={ userObj } />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={ refreshUser } userObj={ userObj } />\n            </Route>\n          </>\n        ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )\n        }\n      </Switch>\n    </Router>\n  )\n}\nexport default AppRouter","import React, { useEffect, useState } from 'react'\nimport AppRouter from 'components/Router'\nimport { authService } from 'fbase'\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user)\n      } else {\n        setUserObj(null)\n      }\n      setInit(true)\n    })\n  })\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    console.log(user)\n    setUserObj(\n      {\n        uid: user.uid,\n        displayName: user.displayName\n      }\n    )\n  }\n\n  return (\n    <div>\n      { init ? <AppRouter refreshUser={ refreshUser } isLoggedIn={ Boolean(userObj) } userObj={ userObj } /> : 'Initializing...' }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'components/App'\nimport 'styles.css'\nimport 'index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <header>\n      <link rel=\"manifest\" href=\"manifest.json\" />\n      <script type=\"module\">\n        import 'https://cdn.jsdelivr.net/npm/@pwabuilder/pwaupdate';\n        const el = document.createElement('pwa-update');\n        document.body.appendChild(el);\n      </script>\n    </header>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}