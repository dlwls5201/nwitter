{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","ok","window","confirm","console","log","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onNweetSubmit","event","preventDefault","update","onSubmit","type","placeholder","value","required","onChange","target","onClick","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createdId","collection","add","maxLength","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Navigation","to","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","orderBy","get","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.785744c2.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import React, {useState} from \"react\";\nimport {dbService, storageService} from \"../fbase\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\")\n        console.log(ok);\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev)\n\n    const onNweetSubmit = async (event) => {\n        event.preventDefault()\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet})\n        setEditing(false)\n    }\n\n    const onNweetChange = (event) => {\n        const {target: {value}} = event;\n        setNewNweet(value);\n    }\n\n    return (\n        <div>\n            {editing ? (\n                <>\n                    <form onSubmit={onNweetSubmit}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your nweet\"\n                            value={newNweet}\n                            required\n                            onChange={onNweetChange}\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\"/>\n                    </form>\n                    <button onClick={toggleEditing}>Cancel</button>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\n                    )}\n                    {isOwner && (\n                        <>\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\n                            <button onClick={toggleEditing}>Edit Nweet</button>\n                        </>\n                    )\n                    }</>\n            )}\n        </div>\n    )\n};\n\nexport default Nweet;\n","import {dbService, storageService} from \"../fbase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {useState} from \"react\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            createdId: userObj.uid,\n            attachmentUrl\n        }\n\n        await dbService.collection(\"nweets\").add(nweetObj)\n\n        setNweet(\"\");\n        setAttachment(\"\")\n    }\n\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNweet(value);\n    }\n\n    const onFileChange = (event) => {\n        const {target: {files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result)\n        }\n        reader.readAsDataURL(theFile)\n    }\n\n    const onClearAttachment = () => setAttachment(null);\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind\" maxLength={120}/>\n            <input onChange={onFileChange} type=\"file\" accept=\"image/*\"/>\n            <input type=\"submit\" value=\"Nweet\"/>\n            {attachment && (\n                <div>\n                    <img src={attachment} width=\"50px\" height=\"50px\"/>\n                    <button onClick={onClearAttachment}>Clear</button>\n                </div>\n            )}\n        </form>\n    )\n}\n\nexport default NweetFactory","import React, {useEffect, useState} from \"react\";\nimport {dbService} from \"../fbase\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"../components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n            const nweetArray = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }));\n            setNweets(nweetArray)\n        });\n    }, []);\n\n    return (\n        <div>\n            <NweetFactory userObj={userObj}/>\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={userObj.uid === nweet.createdId}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import {authService} from \"../fbase\";\nimport {useState} from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {target: {name, value}} = event\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" value={email} onChange={onChange} required/>\n                <input name=\"password\" type=\"password\" placeholder=\"password\" value={password} onChange={onChange} required/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n            {error}\n        </>\n\n    )\n}\n\nexport default AuthForm","import React from \"react\";\nimport {firebaseInstance} from \"../fbase\";\nimport AuthForm from \"../components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {target: {name}} = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await firebaseInstance.auth().signInWithPopup(provider);\n        console.log(data);\n    }\n\n    return (\n        <div>\n            <AuthForm/>\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name=\"github\">Continue with Github</button>\n            </div>\n        </div>\n    );\n}\n\n\nexport default Auth;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst Navigation = ({userObj}) => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\">{userObj.displayName} Profile</Link>\n                </li>\n            </ul>\n        </nav>\n    );\n}\n\n/*const Navigation = ({userObj}) => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/profile\">{userObj.displayName} Profile</Link>\n            </li>\n        </ul>\n    </nav>\n);*/\n\nexport default Navigation;","import React, {useEffect, useState} from \"react\";\nimport {authService, dbService} from \"../fbase\";\nimport {useHistory} from \"react-router-dom\";\n\nconst Profile = ({refreshUser, userObj}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut()\n        history.push(\"/\");\n    }\n\n    const onChange = (event) => {\n        const {target: {value}} = event;\n        setNewDisplayName(value)\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({\n                displayName: newDisplayName\n            });\n            refreshUser();\n        }\n    }\n\n    const getMyNweets = async () => {\n        const nweets = await dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\")\n            .get();\n        console.log(nweets.docs.map((doc) => doc.data()));\n    }\n\n    useEffect(() => {\n        getMyNweets();\n    }, [])\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName}/>\n                <input type=\"submit\" value=\"Update Profile\"/>\n            </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n}\n\nexport default Profile\n","import React from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport Auth from \"routes/Auth\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\n                        </Route>\n                    </>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth/>\n                    </Route>\n                )\n                }\n            </Switch>\n        </Router>\n    )\n}\nexport default AppRouter;","import React, {useEffect, useState} from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj(user)\n                /*setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args)\n                })*/\n            } else {\n                setUserObj(null)\n            }\n            setInit(true);\n        })\n    })\n\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj(user)\n        /*setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args)\n        })*/\n    }\n\n    return (\n        <div>\n            {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\"}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}