{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","ok","window","confirm","console","log","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onNweetSubmit","event","preventDefault","update","className","onSubmit","type","placeholder","value","required","onChange","target","onClick","src","width","height","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","createdId","collection","add","maxLength","faPlus","style","display","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","get","autoFocus","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a45d912.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n  appId: process.env.REACT_APP_APP_ID\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firebaseInstance = firebase\n\nexport const authService = firebase.auth()\nexport const dbService = firebase.firestore()\nexport const storageService = firebase.storage()","import React, { useState } from 'react'\nimport { dbService, storageService } from 'fbase'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nconst Nweet = ({nweetObj, isOwner}) => {\n\n  const [editing, setEditing] = useState(false)\n  const [newNweet, setNewNweet] = useState(nweetObj.text)\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('Are you sure you want to delete this nweet?')\n    console.log(ok)\n    if (ok) {\n      await dbService.doc(`nweets/${ nweetObj.id }`).delete()\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete()\n    }\n  }\n\n  const toggleEditing = () => setEditing((prev) => !prev)\n\n  const onNweetSubmit = async (event) => {\n    event.preventDefault()\n    await dbService.doc(`nweets/${ nweetObj.id }`).update({text: newNweet})\n    setEditing(false)\n  }\n\n  const onNweetChange = (event) => {\n    const {target: {value}} = event\n    setNewNweet(value)\n  }\n\n  return (\n    <div className='nweet'>\n      { editing ? (\n        <>\n          <form onSubmit={ onNweetSubmit } className='container nweetEdit'>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={ newNweet }\n              required\n              onChange={ onNweetChange }\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className='formBtn' />\n          </form>\n          <button onClick={ toggleEditing } className='formBtn cancelBtn'>Cancel</button>\n        </>\n      ) : (\n          <>\n            <h4>{ nweetObj.text }</h4>\n            { nweetObj.attachmentUrl && (\n              <img src={ nweetObj.attachmentUrl } width=\"50px\" height=\"50px\" />\n            ) }\n            { isOwner && (\n              <div className='nweet__actions'>\n                <span onClick={ onDeleteClick }>\n                  <FontAwesomeIcon icon={ faTrash } />\n                </span>\n                <span onClick={ toggleEditing }>\n                  <FontAwesomeIcon icon={ faPencilAlt } />\n                </span>\n              </div>\n            ) }\n          </>\n        ) }\n    </div>\n  )\n}\n\nexport default Nweet\n","import { dbService, storageService } from 'fbase'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nconst NweetFactory = ({userObj}) => {\n  const [nweet, setNweet] = useState('')\n  const [attachment, setAttachment] = useState('')\n\n  const onSubmit = async (event) => {\n    if (nweet === '') {\n      return\n    }\n\n    event.preventDefault()\n    let attachmentUrl = ''\n\n    if (attachment !== '') {\n      const attachmentRef = storageService.ref().child(`${ userObj.uid }/${ uuidv4() }`)\n      const response = await attachmentRef.putString(attachment, 'data_url')\n      attachmentUrl = await response.ref.getDownloadURL()\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      createdId: userObj.uid,\n      attachmentUrl\n    }\n\n    await dbService.collection('nweets').add(nweetObj)\n\n    setNweet('')\n    setAttachment('')\n  }\n\n  const onChange = (event) => {\n    const {target: {value}} = event\n    setNweet(value)\n  }\n\n  const onFileChange = (event) => {\n    const {target: {files}} = event\n    const theFile = files[0]\n    const reader = new FileReader()\n    reader.onloadend = (finishedEvent) => {\n      const {currentTarget: {result}} = finishedEvent\n      setAttachment(result)\n    }\n    reader.readAsDataURL(theFile)\n  }\n\n  const onClearAttachment = () => setAttachment('')\n\n  return (\n    <form onSubmit={ onSubmit } className='factoryForm'>\n      <div className='factoryInput__container'>\n        <input className='factoryInput__input' value={ nweet } onChange={ onChange } type=\"text\" placeholder=\"What's on your mind\" maxLength={ 120 } />\n        <input className='factoryInput__submit' type=\"submit\" value=\"&rarr;\" />\n        <label className='factoryInput__label'>\n          <span>Add photos</span>\n          <FontAwesomeIcon icon={ faPlus } />\n          <input style={ {display: 'none'} } onChange={ onFileChange } type=\"file\" accept=\"image/*\" />\n        </label>\n      </div>\n\n      { attachment && (\n        <div className='factoryForm__attachment'>\n          <img src={ attachment } width=\"50px\" height=\"50px\" />\n          <div className='factoryForm__clear' onClick={ onClearAttachment }>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={ faTimes } />\n          </div>\n        </div>\n      ) }\n    </form>\n  )\n}\n\nexport default NweetFactory","import React, { useEffect, useState } from 'react'\nimport { dbService } from 'fbase'\nimport Nweet from 'components/Nweet'\nimport NweetFactory from 'components/NweetFactory'\n\nconst Home = ({userObj}) => {\n  const [nweets, setNweets] = useState([])\n\n  useEffect(() => {\n    dbService.collection('nweets').orderBy('createdAt', 'desc').onSnapshot((snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data()\n      }))\n      setNweets(nweetArray)\n    })\n  }, [])\n\n  return (\n    <div className='container'>\n      <NweetFactory userObj={ userObj } />\n      <div style={ {marginTop: '30px'} }>\n        { nweets.map((nweet) => (\n          <Nweet\n            key={ nweet.id }\n            nweetObj={ nweet }\n            isOwner={ userObj.uid === nweet.createdId }\n          />\n        )) }\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import { authService } from 'fbase'\nimport { useState } from 'react'\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [newAccount, setNewAccount] = useState(true)\n  const [error, setError] = useState('')\n\n  const onChange = (event) => {\n    const {target: {name, value}} = event\n    if (name === 'email') {\n      setEmail(value)\n    } else if (name === 'password') {\n      setPassword(value)\n    }\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    try {\n      let data\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password)\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password)\n      }\n      console.log(data)\n    } catch (error) {\n      setError(error.message)\n    }\n  }\n\n  const toggleAccount = () => setNewAccount((prev) => !prev)\n\n  return (\n    <>\n      <form onSubmit={ onSubmit } className=\"container\">\n        <input className=\"authInput\" name=\"email\" type=\"text\" placeholder=\"Email\" value={ email } onChange={ onChange } required />\n        <input className=\"authInput\" name=\"password\" type=\"password\" placeholder=\"password\" value={ password } onChange={ onChange } required />\n        <input className=\"authInput authSubmit\" type=\"submit\" value={ newAccount ? 'Create Account' : 'Log In' } />\n      </form>\n      { error && <span className=\"authError\">{ error }</span> }\n      <span onClick={ toggleAccount } className=\"authSwitch\">\n                { newAccount ? 'Sign In' : 'Create Account' }\n      </span>\n    </>\n\n  )\n}\n\nexport default AuthForm","import React from 'react'\nimport { firebaseInstance } from 'fbase'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport AuthForm from 'components/AuthForm'\nimport { faGithub, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons'\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {target: {name}} = event\n    let provider\n    if (name === 'google') {\n      provider = new firebaseInstance.auth.GoogleAuthProvider()\n    } else if (name === 'github') {\n      provider = new firebaseInstance.auth.GithubAuthProvider()\n    }\n    const data = await firebaseInstance.auth().signInWithPopup(provider)\n    console.log(data)\n  }\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={ faTwitter } color={ '#04AAFF' } size=\"3x\" style={ {marginBottom: '30px'} } />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button className=\"authBtn\" onClick={ onSocialClick } name=\"google\">Continue with Google <FontAwesomeIcon icon={ faGoogle } /></button>\n        <button className=\"authBtn\" onClick={ onSocialClick } name=\"github\">Continue with Github <FontAwesomeIcon icon={ faGithub } /></button>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\n\nconst Navigation = ({userObj}) => {\n  return (\n    <nav>\n      <ul style={ {display: 'flex', justifyContent: 'center', marginTop: '50px', marginBottom: '30px'} }>\n        <li>\n          <Link to=\"/\" style={ {marginRight: '10px'} }>\n            <FontAwesomeIcon icon={ faTwitter } color={ '#04AAFF' } size='2x' />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/profile\"\n                style={ {marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'center', fontSize: '12px'} }\n          >\n            <FontAwesomeIcon icon={ faUser } color={ '#04AAFF' } size='2x' />\n            <span style={ {marginTop: '10px', color: '#04AAFF'} }>\n                { userObj.displayName ? `${ userObj.displayName }의 Profile` : 'Profile' }\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navigation","import React, { useEffect, useState } from 'react'\nimport { authService, dbService } from 'fbase'\nimport { useHistory } from 'react-router-dom'\n\nconst Profile = ({refreshUser, userObj}) => {\n  const history = useHistory()\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n\n  const onLogOutClick = () => {\n    authService.signOut()\n    history.push('/')\n  }\n\n  const onChange = (event) => {\n    const {target: {value}} = event\n    setNewDisplayName(value)\n  }\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n                                    displayName: newDisplayName\n                                  })\n      refreshUser()\n    }\n  }\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection('nweets')\n      .where('creatorId', '==', userObj.uid)\n      .orderBy('createdAt')\n      .get()\n    console.log(nweets.docs.map((doc) => doc.data()))\n  }\n\n  useEffect(() => {\n    getMyNweets()\n  }, [])\n\n  return (\n    <div className='container'>\n      <form onSubmit={ onSubmit } className='profileForm'>\n        <input className='formInput' onChange={ onChange } type=\"text\" placeholder=\"Display name\" value={ newDisplayName } autoFocus />\n        <input className='formBtn' type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <span className='formBtn cancelBtn logOut' onClick={ onLogOutClick }>Log Out</span>\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from 'routes/Home'\nimport Auth from 'routes/Auth'\nimport Navigation from 'components/Navigation'\nimport Profile from 'routes/Profile'\n\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) => {\n  return (\n    <Router>\n      { isLoggedIn && <Navigation userObj={ userObj } /> }\n      <Switch>\n        { isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={ userObj } />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={ refreshUser } userObj={ userObj } />\n            </Route>\n          </>\n        ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )\n        }\n      </Switch>\n    </Router>\n  )\n}\nexport default AppRouter","import React, { useEffect, useState } from 'react'\nimport AppRouter from 'components/Router'\nimport { authService } from 'fbase'\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user)\n      } else {\n        setUserObj(null)\n      }\n      setInit(true)\n    })\n  })\n\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj(user)\n  }\n\n  return (\n    <div>\n      { init ? <AppRouter refreshUser={ refreshUser } isLoggedIn={ Boolean(userObj) } userObj={ userObj } /> : 'Initializing...' }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from 'components/App'\nimport 'styles.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}